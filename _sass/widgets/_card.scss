
$card-back-color:  #FFF;
$card-text-color:  #000;
$card-corner-size: 1rem;

@import "libraries/borderimage";

///
/// Cards are white boxes with rounded corners and a soft, realistic shadow. 
/// The shadow is implemented with box-shadow by default, but on smartphones, 
/// we fall back to a `border-image` for performance reasons. A consequence 
/// of this is that the border image may clobber any custom background image 
/// that you add to a card. Additionally, border images don't crop properly 
/// for small boxes, so we offer a parameter for disabling the fallback.
///
/// We also provide a "card cutout" mixin, which when applied to an element 
/// creates a region with rounded corners where the page background appears 
/// to show through.
///

//

///
/// Display a card shadow as a border-image, and optionally clip off specific 
/// edges so they don't cover anything. (The latter functionaliy exists for 
/// our mobile-specific top navbar.)
///
@mixin card-shadow-border-image($inset: false, $clip-shadow-edges: null) {
   /* crbug.com/1417526 -- Chromium fails to render border-images without a non-zero border-width */
   border: 1px solid transparent;
   
   @if $inset {
      /*
      border-image: url("./card-shadow-inset.svg") 41 29 17 / 2.5625rem 1.8125rem 1.0625rem / 0;
      min-height:calc(3.625em - 2px);
      */
      
      border-image: url("./card-shadow-inset.png") 82 58 34 / 2.5625rem 1.8125rem 1.0625rem / 0;
      min-height:calc(3.625em - 2px);
   } @else {
      $borderimage: (
         source:    url("./card-shadow-outset-no-fill.png"),
         intrinsic: 144     144    164     144,
         displayed: 4.5em   4.5em  5.125em 4.5em,
         //displayed: 72px 72px 82px 72px,
         outsets:   0.375em 2.25em 4.125em 2.25em,
         //outsets:   6px 36px 132px 36px,
         repeat:    repeat
      );
      
      @if $clip-shadow-edges {
         $borderimage: borderimage-clip-sides($borderimage, $clip-shadow-edges);
      }
      
      border-image: borderimage-to-string($borderimage);
   }
}

@mixin card-mobile-fallback-hack($inset: false, $clip-shadow-edges: null) {
   @if $inset {
      /*
         Having too many box-shadows on-screen at one time can cause lag for weaker devices, 
         such as smartphones. For that reason, we're going to have inset card shadows fall 
         back to using a border-image instead of multiple box-shadows. The result will look 
         marginally less pretty, but not too noticeably so.
      */
      @include for-smartphones-only {
         box-shadow: none;
         @include card-shadow-border-image(true);
      }
   } @else {
      @include for-smartphones-only {
         box-shadow: none;
         @at-root {
            //
            // Drop back to the root so we can use :where(...) with SASS interpolation, to 
            // apply `position: relative` with the lowest possible priority.
            //
            :where(#{&}) {
               position: relative;
            }
         }
         &::after {
            content:  " ";
            position: absolute;
            z-index:  -1;
            inset:    0;
            
            user-select:    none;
            pointer-events: none;
            
            @include card-shadow-border-image(false, $clip-shadow-edges);
         }
      }
   }
}

@mixin card-shadow($inset: false, $use-mobile-fallback: true, $clip-shadow-edges: false) {
   $-inset-str: unquote("");
   @if $inset {
      $-inset-str: inset;
   }
   
   box-shadow:
      $-inset-str 0  0px  4px rgba(0, 0, 0, 0.05),
      $-inset-str 0  5px  6px rgba(0, 0, 0, 0.05),
      $-inset-str 0  6px  8px rgba(0, 0, 0, 0.06),
      $-inset-str 0  8px 10px rgba(0, 0, 0, 0.06),
      $-inset-str 0 10px 12px rgba(0, 0, 0, 0.07),
      $-inset-str 0 20px 24px rgba(0, 0, 0, 0.07),
      $-inset-str 0 30px 36px rgba(0, 0, 0, 0.08);
   
   @if $use-mobile-fallback {
      @include card-mobile-fallback-hack($inset, $clip-shadow-edges);
   }
}

@mixin card($use-mobile-fallback: true) {
   background:    $card-back-color;
   color:         $card-text-color;
   border-radius: $card-corner-size;
   padding:       1.5rem 2rem;
   @include card-shadow(false, $use-mobile-fallback);
}

@mixin card-cutout {
   @include theme-background();
   
   border-radius: 1rem;
   padding:       1rem;
   @include card-shadow(true);
   
   // Needed so that cards inside the cutout have their shadows visible.
   // Something to do with how stacking contexts interact with z-index on 
   // the shadows. Don't have time to figure out the specifics right now.
   isolation: isolate;
}

@mixin revert-card-shadow-styles {
   box-shadow:   none;
   border-image: none;
   &::after {
      content: "";
      border-image: none;
   }
}