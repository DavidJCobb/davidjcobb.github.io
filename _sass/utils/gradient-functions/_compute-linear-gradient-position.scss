
@import "polyfills/math-cos.scss";
@import "polyfills/math-div.scss";
@import "polyfills/math-sin.scss";
@import "utils/gradient-functions/linear-gradient-side-or-corner-to-angle.scss";
@import "utils/math-functions/sqrt-floor.scss";
@import "utils/remove-unit.function.scss";

///
///   compute-linear-gradient-position
///
///      Returns a position along a linear gradient, where 0 represents 0% and 
///      1 represents 100%.
///      
///      The $box parameter should be a map with keys "x", "y", "w", and "h", 
///      each of which should be a unitless number.
///
@function compute-linear-gradient-position(
   $parsed-gradient,
   $box
) {
   $x: map-get($box, "x");
   $y: map-get($box, "y");
   $w: map-get($box, "w");
   $h: map-get($box, "h");
   
   $angle: 0;
   @if map-has-key($parsed-gradient, "angle") {
      $angle: map-get($parsed-gradient, "angle");
   } @else if map-has-key($parsed-gradient, "side-or-corner") {
      $angle: linear-gradient-side-or-corner-to-angle(map-get($parsed-gradient, "side-or-corner"));
   }
   $cos: math-cos($angle);
   $sin: math-sin($angle);
   
   // per the spec
   $gradient-line-length: abs($w * $sin) + abs($h * $cos);
   
   // linear gradients have their centerpoint matched to the box's centerpoint
   $gl-x1: math-div($w, 2) + $cos * math-div($gradient-line-length, 2);
   $gl-x2: math-div($w, 2) - $cos * math-div($gradient-line-length, 2);
   $gl-y1: math-div($h, 2) + $sin * math-div($gradient-line-length, 2);
   $gl-y2: math-div($h, 2) - $sin * math-div($gradient-line-length, 2);
   
   // compute percentage distance offset to sample...
   $k: math-div(
      (($gl-y2 - $gl-y1) * ($x - $gl-x1) - ($gl-x2 - $gl-x1) * ($y - $gl-y1))
      ,
      (($gl-y2 - $gl-y1)*($gl-y2 - $gl-y1) + ($gl-x2 - $gl-x1)*($gl-x2 - $gl-x1))
   );
   
   // perpendicular intersection point -- a coordinate on the gradient line
   $x-int: $x - $k*($gl-y2 - $gl-y1);
   $y-int: $y + $k*($gl-x2 - $gl-x1);
   
   $x-diff: $x-int - $gl-x1;
   $y-diff: $y-int - $gl-y1;
   
   $distance: remove-unit(math-div(
      sqrt-floor(($x-diff*$x-diff) + ($y-diff*$y-diff))
      ,
      $gradient-line-length
   ));
   @return $distance;
}